import sys, time
sys.stdin = open('input.txt')
start_time = time.time()

#=================================================



#=================================================

end_time = time.time()
print('time: ', end_time - start_time)

'''
< 로직 >
1. 인접한 수 중 가장 큰 값에 병합되어야 함.
    - 그래야 큰 값이 더 많이 더해진다.

2. 자기 자신을 기준으로 양쪽 값 중 더 큰 값에 병합.

3. 풀이
    - min()을 통해 가장 작은 값을 찾는다.
    -> 가장 작은 값과 그 양쪽 값 중 큰 값과 누적합을 통해 답을 구한다.
    -> min()을 통해 찾은 값은 remove를 통해 제거한다.
    -> 리스트의 크기가 1이 되면 끝.
'''

'''
< 시간 복잡도 >

'''

'''
< 문제 정리 >
1. 순서가 정해진 여러 장의 카드 

2. 각각의 카드에는 레벨이 있음.

3. 조건
    - 두 카드는 인접한 카드여야 함.
    - 업그레이드 된 카드 A의 레벨은 변하지 않음.

4. 카드 합성시마다 두 카드 레벨의 합만큼 골드를 받음.

5. 최대한 많은 골드를 받도록하는 로직.
'''